{"version":3,"sources":["logo.svg","features/counter/counterAPI.js","features/counter/counterSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","Header","useState","burgerStatus","setBurgerStatus","Container","href","src","MenuGroup","RightMenu","MenuIconContainer","onClick","BurgerNav","CloseContainer","styled","div","Close","CloseIcon","props","Section","bgImage","backgroundImg","ItemText","title","description","ButtonGroup","LeftButton","leftBtnText","RightButton","rightBtnText","DownArrow","img","Home","App","className","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3084180b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { Translate } from '@material-ui/icons';\r\n\r\n\r\nfunction Header() {\r\n    const [burgerStatus, setBurgerStatus] = useState(false);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <a href=\"#\">\r\n                <img src=\"./images/logo.svg\" />\r\n            </a>\r\n            <MenuGroup>\r\n                <div><a href=\"#\">Model S</a></div>\r\n                <div><a href=\"#\">Model 3</a></div>\r\n                <div><a href=\"#\">Model X</a></div>\r\n                <div><a href=\"#\">Model Y</a></div>\r\n            \r\n            </MenuGroup>\r\n            <RightMenu>\r\n                <a href=\"#\">Shop</a>\r\n                <a href=\"#\">Account</a>\r\n                <MenuIconContainer onClick={()=>setBurgerStatus(true)}>\r\n                     <MenuIcon />\r\n                </MenuIconContainer>\r\n            </RightMenu>\r\n            <BurgerNav status={burgerStatus}>\r\n                <CloseContainer >\r\n                     <Close onClick={()=>setBurgerStatus(false)}/>\r\n                </CloseContainer>\r\n                \r\n                <li><a href=\"#\">Model S</a></li>\r\n                <li><a href=\"#\">Model Y</a></li>\r\n                <li><a href=\"#\">Model X</a></li>\r\n                <li><a href=\"#\">Model Y</a></li>\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">Used Invertory</a></li>\r\n                <li><a href=\"#\">Trade-In</a></li>\r\n                <li><a href=\"#\">Cybertruck</a></li>\r\n                <li><a href=\"#\">Roadster</a></li>\r\n                <li><a href=\"#\">Semi</a></li>\r\n                <li><a href=\"#\">Charging</a></li>\r\n                \r\n            </BurgerNav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    min-height: 60px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 10;\r\n`\r\n\r\nconst MenuGroup = styled.div`\r\n    display: flex;\r\n    text-transform: uppercase;\r\n    div {\r\n        font-weight: 600;\r\n        padding: 0 10px;\r\n        cursor: pointer;\r\n        \r\n    }\r\n\r\n    a:hover {\r\n        font-size:18px;\r\n    }\r\n\r\n    @media(max-width: 768px) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nconst RightMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    a {\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        padding-right: 10px;\r\n    }\r\n\r\n    a:hover {\r\n        font-size:18px;\r\n    }\r\n`\r\n\r\nconst MenuIconContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n`\r\nconst CloseContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`\r\n\r\nconst Close = styled(CloseIcon)`\r\n    cursor: pointer;\r\n`\r\n\r\nconst BurgerNav =styled.div`\r\n    position: fixed;\r\n    width: 300px;\r\n    background: white;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    padding: 20px;\r\n    list-style: none;\r\n    transform: ${props => props.status ? 'translateX(0)' : 'translateX(100%)'};\r\n    transition: transform 0.2s ease-in;\r\n    li {\r\n        padding: 15px 0;\r\n        border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n        a {\r\n           font-weight: 600;\r\n        }\r\n    }\r\n\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nfunction Section(props) {\r\n    return (\r\n        <Container bgImage={ props.backgroundImg }>\r\n            <ItemText>\r\n                <h1>{ props.title }</h1>\r\n                <p>{ props.description }</p>\r\n            </ItemText>\r\n            <ButtonGroup>\r\n                <LeftButton>{ props.leftBtnText }</LeftButton>\r\n                <RightButton>{ props.rightBtnText }</RightButton>\r\n            </ButtonGroup>\r\n            <DownArrow src = \"./images/down-arrow.svg\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Section;\r\n\r\nconst Container = styled.div`\r\n    background-color: blue;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-image: ${props => `url('./images/${props.bgImage }')`};\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\nconst ItemText = styled.div`\r\n    padding-top: 15vh;\r\n    text-align: center;\r\n    flex-grow: 1;\r\n`\r\nconst ButtonGroup =styled.div`\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n\r\n    @media(max-width: 768px){\r\n        display: flex;\r\n        flex-direction:column;\r\n        margin-top: 30px;\r\n    }\r\n`\r\n\r\nconst LeftButton = styled.div`\r\n    background-color: rgba(23, 26, 32, 0.8);\r\n    height: 40px;\r\n    width: 256px;\r\n    border-radius: 100px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    opacity: 0.85;\r\n    margin: 8px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        opacity: 1;\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nconst RightButton = styled(LeftButton)`\r\n   background-color: white;\r\n   color: black;\r\n   opacity: 0.65;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\n    height: 40px;\r\n    animation: animateDown infinite 1.5s;\r\n    margin-bottom: 50px;\r\n`","import React from 'react';\r\nimport Section from './Section';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Section \r\n                title=\"Model S\"\r\n                description=\"Order Online for touchless Delivery\"\r\n                backgroundImg=\"model-s.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Exting invertory\"\r\n            />\r\n            <Section \r\n                title=\"Model Y\"\r\n                description=\"Order Online for touchless Delivery\"\r\n                backgroundImg=\"model-y.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Exting invertory\"\r\n            />\r\n            <Section \r\n                title=\"Model 3\"\r\n                description=\"Order Online for touchless Delivery\"\r\n                backgroundImg=\"model-3.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Exting invertory\"\r\n            />\r\n            <Section \r\n                title=\"Model X\"\r\n                description=\"Order Online for touchless Delivery\"\r\n                backgroundImg=\"model-x.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Exting invertory\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n     \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__31-15\",\"value\":\"Counter_value__26xBi\",\"button\":\"Counter_button__2g6Do\",\"textbox\":\"Counter_textbox__2tewo\",\"asyncButton\":\"Counter_asyncButton__TIbcj Counter_button__2g6Do\"};"],"sourceRoot":""}